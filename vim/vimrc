" Vim Configuration
" https://vimhelp.org/
"
" ~/.vimrc

" ------------------------------------------------------------------------------
" Backups
" ------------------------------------------------------------------------------

" Setup backup directory.
set backupdir=~/.vim/backups
if !isdirectory(expand(&backupdir))
  call mkdir(expand(&backupdir), 'p')
endif

" Setup swap directory.
set directory=~/.vim/swaps
if !isdirectory(expand(&directory))
  call mkdir(expand(&directory), 'p')
endif

" Setup undo directory.
set undodir=~/.vim/undo
if !isdirectory(expand(&undodir))
  call mkdir(expand(&undodir), 'p')
endif

" ------------------------------------------------------------------------------
" Interface
" ------------------------------------------------------------------------------

" Always show a status line.
set laststatus=2

" Show the line number in front of each line.
set number

if has('cmdline_info')
  " Show the line and column number of the cursor position.
  set ruler
endif

if has('syntax')
  " Highlight the text line of the cursor.
  set cursorline

  " Show vertical rulers.
  set colorcolumn=80,100,120,200
endif

if has('wildmenu')
  " Show a list of possible completions.
  set wildmenu
  " Complete longest common string, then list alternatives.
  set wildmode=longest,list

  if has('wildignore')
    " Ignore files when expanding wildcards.
    set wildignore+=*.o,*~,*.pyc
    set wildignore+=.git\*,.hg\*,.svn\*
    set wildignore+=*/.git/*,*/.hg/*,*/.svn/*,*/.DS_Store
  endif
endif

if has('title')
  " Enable screen title.
  set title
endif

" Enable the mouse in all five modes.
set mouse=a

" ------------------------------------------------------------------------------
" Editing
" ------------------------------------------------------------------------------

" Set UTF-8 as standard encoding.
set encoding=utf8

if has('autocmd')
  " Enable filetype plugins.
  filetype on
  filetype indent on
  filetype plugin on
endif

" Setup backspace so it acts as it should act.
set backspace=indent,eol,start
set whichwrap+=<,>,h,l

" Use 4 spaces for indentation.
set shiftwidth=4
set tabstop=4

" Use spaces instead of tabs.
set expandtab

" Enable smart indentation editing.
set smarttab

" Show invisible characters.
set list
set listchars=tab:‣\ ,trail:·,nbsp:·,extends:»,precedes:«,eol:¬

" ------------------------------------------------------------------------------
" Searching
" ------------------------------------------------------------------------------

if has('extra_search')
  " Highlight all matched search results.
  set hlsearch
  " Highlight dynamically as pattern is typed.
  set incsearch
endif

" Ignore case in search patterns, unless it has mixed case.
set ignorecase
set smartcase

" ------------------------------------------------------------------------------
" Key Mappings
" ------------------------------------------------------------------------------

" <Shift>-<Arrows> to select the active split.
nnoremap <S-Left> <C-W><C-H>
nnoremap <S-Right> <C-W><C-L>
nnoremap <S-Up> <C-W><C-K>
nnoremap <S-Down> <C-W><C-J>

" <Esc><Esc> to clear search highlight.
nnoremap <Esc><Esc> :nohlsearch<CR><Esc>

" <Ctrl>-<S> to save file.
inoremap <C-s> <C-O>:update<CR>
nnoremap <C-s> :update<CR>

" `:W` to save file as sudo.
command! W execute 'w !sudo tee % > /dev/null' <bar> edit!

" ------------------------------------------------------------------------------
" Colors
" ------------------------------------------------------------------------------

if has('syntax')
  " Enable syntax highlight.
  syntax enable

  " Enable 256 color terminal support.
  set t_Co=256

  " Set dark background.
  set background=dark

  if has('termguicolors')
    " Set Vim-specific sequences for RGB colors.
    let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
    let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"

    " Enable 24-bit color.
    set termguicolors
  endif
endif

" ------------------------------------------------------------------------------
" Plugins
" ------------------------------------------------------------------------------

" Install vim-plug and plugins.
" https://github.com/junegunn/vim-plug/wiki/tips
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ 'https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

" Load plugins.
call plug#begin('~/.vim/plugged')
Plug 'jacoborus/tender.vim'
Plug 'itchyny/lightline.vim'
Plug 'airblade/vim-gitgutter'
Plug 'Yggdroot/indentLine'
Plug 'editorconfig/editorconfig-vim'
Plug 'sheerun/vim-polyglot'
call plug#end()

" Plugin: jacoborus/tender.vim
silent! colorscheme tender

" Plugin: tchyny/lightline.vim
let g:lightline = { 'colorscheme': 'tender' }

" ------------------------------------------------------------------------------
" Local Configuration
" ------------------------------------------------------------------------------

" Load local configuration if exists.
if filereadable(expand('~/.vimrc.local'))
  source ~/.vimrc.local
endif
